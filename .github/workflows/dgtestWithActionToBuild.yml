name: Framework Build

on:
  workflow_dispatch:
  
  schedule:
    - cron: '30 23 * * 0'  # 23:30 every Sunday
    
  #push:
  #  branches: [ main ]

jobs:

  Linux:
    name: ${{ matrix.os }}.${{ matrix.CC }}.python-${{ matrix.python }}.dgcode-${{ matrix.build-flag }}
    strategy:
      fail-fast: false
      matrix: 
        include:
          # Ubuntu-20.04
          - { os: ubuntu-20.04, CC: gcc-10,   CXX: g++-10,     python: '3.9.7' , build-flag: debug }
          
          - { os: ubuntu-20.04, CC: gcc-10,   CXX: g++-10,     python: 3.9, build-flag: debug }
          #- { os: ubuntu-20.04, CC: gcc-10,   CXX: g++-10,     python: 3.9, build-flag: release }
          - { os: ubuntu-20.04, CC: gcc-10,   CXX: g++-10,     python: 3.8, build-flag: debug }
          #- { os: ubuntu-20.04, CC: gcc-10,   CXX: g++-10,     python: 3.8, build-flag: release }
          
          #- { os: ubuntu-20.04, CC: gcc-9,    CXX: g++-9,      python: 3.9, build-flag: debug }
          #- { os: ubuntu-20.04, CC: gcc-9,    CXX: g++-9,      python: 3.9, build-flag: release }
          #- { os: ubuntu-20.04, CC: gcc-9,    CXX: g++-9,      python: 3.8, build-flag: debug }
          #- { os: ubuntu-20.04, CC: gcc-9,    CXX: g++-9,      python: 3.8, build-flag: release }
          
          #- { os: ubuntu-20.04, CC: clang-12, CXX: clang++-12, python: 3.9, build-flag: debug }
          #- { os: ubuntu-20.04, CC: clang-12, CXX: clang++-12, python: 3.9, build-flag: release }
          #- { os: ubuntu-20.04, CC: clang-12, CXX: clang++-12, python: 3.8, build-flag: debug }
          #- { os: ubuntu-20.04, CC: clang-12, CXX: clang++-12, python: 3.8, build-flag: release }
           
          #- { os: ubuntu-20.04, CC: clang-10, CXX: clang++-10, python: 3.9, build-flag: debug }
          #- { os: ubuntu-20.04, CC: clang-10, CXX: clang++-10, python: 3.9, build-flag: release }
          #- { os: ubuntu-20.04, CC: clang-10, CXX: clang++-10, python: 3.8, build-flag: debug }
          #- { os: ubuntu-20.04, CC: clang-10, CXX: clang++-10, python: 3.8, build-flag: release }
         
          # Ubuntu-18.04
          #- { os: ubuntu-18.04, CC: clang-9,  CXX: clang++-9,  python: 3.9, build-flag: debug }
          #- { os: ubuntu-18.04, CC: clang-9,  CXX: clang++-9,  python: 3.9, build-flag: release }
          #- { os: ubuntu-18.04, CC: clang-9,  CXX: clang++-9,  python: 3.6, build-flag: debug }
          #- { os: ubuntu-18.04, CC: clang-9,  CXX: clang++-9,  python: 3.6, build-flag: release }
           
          #- { os: ubuntu-18.04, CC: gcc-7,    CXX: g++-7,      python: 3.9, build-flag: debug }
          #- { os: ubuntu-18.04, CC: gcc-7,    CXX: g++-7,      python: 3.9, build-flag: release }
          #- { os: ubuntu-18.04, CC: gcc-7,    CXX: g++-7,      python: 3.6, build-flag: debug }
          #- { os: ubuntu-18.04, CC: gcc-7,    CXX: g++-7,      python: 3.6, build-flag: release }
          
          #- { os: ubuntu-18.04, CC: gcc-10,   CXX: g++-10,     python: 3.9, build-flag: debug }
          #- { os: ubuntu-18.04, CC: gcc-10,   CXX: g++-10,     python: 3.9, build-flag: release }
          #- { os: ubuntu-18.04, CC: gcc-10,   CXX: g++-10,     python: 3.6, build-flag: debug }
          #- { os: ubuntu-18.04, CC: gcc-10,   CXX: g++-10,     python: 3.6, build-flag: release }
          
          # macOS 10.15
          #- { os: macos-10.15,  CC: clang,    CXX: clang++,    python: default, build-flag: debug }
          #- { os: macos-10.15,  CC: clang,    CXX: clang++,    python: default, build-flag: release }
          
          # macOS 11
          #- { os: macos-11,     CC: clang,    CXX: clang++,    python: default, build-flag: debug }
          #- { os: macos-11,     CC: clang,    CXX: clang++,    python: default, build-flag: release }
          
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      SHELL: /bin/bash
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      PROJ_DIR: projects

    steps:
      - uses: actions/checkout@v2
      
      - name: Checkout dgcode
        uses: actions/checkout@v2
        with:
          repository: MilanKlausz/devDgcode
          #path: './dgcode-repo'
          path: './dgcode_framework'
      
      - name: debug - check dir
        run: |
          pwd -P
          ls

      # - name: mv dgcode folder in place
      #   run: | 
      #     mv ./dgcode-repo/dg_dgcode ./dgcode_framework
      #     rm -r dgcode-repo
          
      - name: Set up Python (on Linux)
        if: runner.os == 'Linux'
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: dgbuild framework action
        uses: ./.github/actions/dgbuild
        with:
          BUILD_FLAG: ${{ matrix.build-flag }}
          PROJ_DIR: ${{ env.PROJ_DIR }}
  
      - name: test dgcode
        run: |
          . $HOME/dgdepfixerInstall/setup.sh
          . $HOME/geant4-10.04.p03/setup.sh
          . $GITHUB_WORKSPACE/.github/scripts/geant4DataSetup.sh
          . bootstrap.sh
          dgbuild -t
        working-directory: ${{ env.PROJ_DIR }}
        env:
          DGDEP_IGNOREBADSHEBANG: 1
