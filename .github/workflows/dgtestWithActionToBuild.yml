# This is a basic workflow to help you get started with Actions

name: Framework Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  testFramework:
    strategy:
      fail-fast: false
      matrix: 
        os: [ubuntu-20.04, macos-10.15]
        compiler: [gcc, clang]
        #include:
        #  - { os: ubuntu-20.04, compiler: GNU, CC: gcc-10, CXX: g++-10, GCOV: gcov-10 }
        #  - { os: ubuntu-20.04, compiler: LLVM, CC: clang-10, CXX: clang++-10 }
    runs-on: ${{ matrix.os }}
    
    defaults:
      run:
        shell: bash
    env:
      SHELL: /bin/bash
      CC: ${{ matrix.compiler }}
      CXX: ${{ matrix.compiler }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: dgbuild framework action
        uses: ./.github/actions/dgbuild
        with:
          runs-on: ${{ matrix.os }}

      - name: test dgcode
        run: |
          . $HOME/dgdepfixerInstall/setup.sh
          . $HOME/geant4-10.04.p03/setup.sh
          . $GITHUB_WORKSPACE/.github/scripts/geant4DataSetup.sh
          . bootstrap.sh
          dgbuild -t
        working-directory: dg_dgcode
        env:
          DGDEP_IGNOREBADSHEBANG: 1
