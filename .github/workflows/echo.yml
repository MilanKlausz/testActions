# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #continue-on-error: true
    
    defaults:
      run:
        shell: bash
        #working-directory: todo
    env:
      SHELL: /bin/bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Test acces to the repo
        run: tail testFile
        
      - name: apt-get update
        run: sudo apt-get update            
    
      - name: Install basic prerequisites
        run: sudo apt-get install curl g++ build-essential python3-dev cmake libxerces-c-dev libexpat1-dev gfortran libhdf5-serial-dev git python3-venv python3-pip python3-tk mesa-common-dev libglu1-mesa-dev freeglut3-dev cm-super

      - name: Download dgdepfixer
        run: curl -OSsf https://storage.googleapis.com/dgdepfixer/dgdepfixer && chmod +x ./dgdepfixer
        
      - name: prevent dgdepfixer issues with bash profile files and git config
        run: |
          mv /home/runner/.profile /home/runner/.profile_DISABLED
          echo 'if [ -f $HOME/.bashrc ]; then . $HOME/.bashrc; fi' >> /home/runner/.bash_profile 
          git config --global user.name "Lorem Ipsum"
          git config --global user.email "dolor.sit@ess.eu"
       
      - name: Install dgdepfixer
        run: ./dgdepfixer #python3 ./dgdepfixer
       
      #- name: dgdepfixer create
      #  id: dgdepfixer_create
      #  run: |
      #    printf "#!/bin/bash\n./dgdepfixer --create\n[ $? -eq 0 ]  || exit 0\n"  >> runCreateScript.sh
      #    chmod +x ./runCreateScript.sh
      #    ./runCreateScript.sh
      #    echo "/home/runner/dgdepfixer_install/venv/bin:/home/runner/dgdepfixer_install/cmake/bin:/home/runner/dgdepfixer_install/dgdepfixer_bin" >> $GITHUB_PATH
      #    echo "VIRTUAL_ENV_DISABLE_PROMPT=1" >> $GITHUB_ENV 

      - name: dgdepfixer create
        id: dgdepfixer_create
        run: |
          which python
          ./dgdepfixer --create
          echo "/home/runner/dgdepfixer_install/venv/bin:/home/runner/dgdepfixer_install/cmake/bin:/home/runner/dgdepfixer_install/dgdepfixer_bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV_DISABLE_PROMPT=1" >> $GITHUB_ENV
          which python
 
      - name: source dgdepfixer setup
        run: |
          shopt -s expand_aliases
          alias export='f(){ if [[  "$@" == "PATH="* ]]; then echo "export PATH env var aliased: PATH=${@##*=}"; echo ${@##*=} >> $GITHUB_PATH; elif [[  "$@" == "PATH" ]]; then echo "export PATH env var aliased: PATH=${!@}"; echo ${!@} >> $GITHUB_PATH; elif [[  "$@" == *"="* ]]; then echo "export env var aliased: $@"; echo "$@"  >> $GITHUB_ENV; eval "$@"; else echo "export env var aliased: $@=${!@}"; echo $@=${!@}  >> $GITHUB_ENV; fi }; f'        
          alias unset='f(){  gawk -i inplace "!/^$@=/" $GITHUB_ENV;  }; f'
          . /home/runner/dgdepfixer_install/setup.sh
          type deactivate
       ## echo "/home/runner/dgdepfixer_install/venv/bin:/home/runner/dgdepfixer_install/cmake/bin:/home/runner/dgdepfixer_install/dgdepfixer_bin" >> $GITHUB_PATH
       ##   echo "VIRTUAL_ENV_DISABLE_PROMPT=1" >> $GITHUB_ENV   
       ##   echo "DGDEPDIR=/home/runner/dgdepfixer_install" >> $GITHUB_ENV
       ##   echo "PYTHONSTARTUP=/home/runner/dgdepfixer_install/venv/custom_pystartup.py" >> $GITHUB_ENV
       ##   echo "VIRTUAL_ENV=/home/runner/dgdepfixer_install/venv" >> $GITHUB_ENV
         
       # env
      
      - name: cache dgdepfixer extras
        id: cache-dgdepfixer-extras
        uses: actions/cache@v2
        with:
          path: /home/runner/dgdepfixer_install/extras
          key: ${{ runner.os }}-dgdepfixer-extras-Geant4--nodata
        
      - name: Install Geant4
        if: steps.cache-dgdepfixer-extras.outputs.cache-hit != 'true'
        run: dgdepfixer --instsw=Geant4 --nodata
 
 
      - name: cache untarred geant4 data files
        id: cache-untarred-geant4-data-files
        uses: actions/cache@v2
        with:
           path: /home/runner/Geant4data
           key: untarred-geant4-data-files 
 
      - name: Download Geant4 gata and create symlinks
        if: steps.cache-untarred-geant4-data-files.outputs.cache-hit != 'true'
        run: | 
          curl -OSsf https://storage.googleapis.com/dgdepfixer/geant4DataProvider.sh && chmod +x ./geant4DataProvider.sh
          . geant4DataProvider.sh
               
               
      - name: env
        run: |
          ls ~/dgdepfixer_install/extras/geant4-10.04.p03/share/Geant4-10.4.3/data
          env
          

      ##- name: check if deactivate command exists
      ##  run: |
      ##    command -v deactivate
      ## . /home/runner/dgdepfixer_install/unsetup.sh
      ## . /home/runner/dgdepfixer_install/setup.sh

    
      - name: source dgdepfixer setup again
        run: |
          shopt -s expand_aliases
          alias export='f(){ if [[  "$@" == "PATH="* ]]; then echo "export PATH env var aliased: PATH=${@##*=}"; echo ${@##*=} >> $GITHUB_PATH; elif [[  "$@" == "PATH" ]]; then echo "export PATH env var aliased: PATH=${!@}"; echo ${!@} >> $GITHUB_PATH; elif [[  "$@" == *"="* ]]; then echo "export env var aliased: $@"; echo "$@"  >> $GITHUB_ENV; eval "$@"; else echo "export env var aliased: $@=${!@}"; echo $@=${!@}  >> $GITHUB_ENV; fi }; f'        
          alias unset='f(){  gawk -i inplace "!/^$@=/" $GITHUB_ENV;  }; f'
          type deactivate
          . "${DGDEPDIR}/venv/bin/activate"
          . /home/runner/dgdepfixer_install/setup.sh
          
