name: Test Compiller Matrix

on:
  workflow_dispatch:
  #push:
  #  branches: [ main ]

jobs:

  Linux:
    name: ${{ matrix.os }}.${{ matrix.CC }}
    strategy:
      fail-fast: false
      matrix: 
        include:
          - { os: ubuntu-20.04, compiler: GNU, CC: gcc-10, CXX: g++-10, GCOV: gcov-10 }
          - { os: ubuntu-20.04, compiler: LLVM, CC: clang-10, CXX: clang++-10 }
          - { os: ubuntu-18.04, compiler: LLVM, CC: clang-9, CXX: clang++-9 }
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      SHELL: /bin/bash
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}

    steps:
      - uses: actions/checkout@v2

      - name: dgbuild framework action
        uses: ./.github/actions/dgbuild-vanilla
        with:
          runs-on: ${{ matrix.os }}

      - name: test dgcode
        run: |
          . $HOME/dgdepfixerInstall/setup.sh
          . bootstrap.sh
          dgbuild -t
        working-directory: dg_dgcode
        env:
          DGDEP_IGNOREBADSHEBANG: 1
          
  macOS:
    name: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        include:
          - { os: macos-10.15 }
          - { os: macos-11 }
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      SHELL: /bin/bash
      
    steps:
      - uses: actions/checkout@v2

      - name: dgbuild framework action
        uses: ./.github/actions/dgbuild-vanilla
        with:
          runs-on: ${{ matrix.os }}

      - name: test dgcode
        run: |
          . $HOME/dgdepfixerInstall/setup.sh
          . bootstrap.sh
          dgbuild -t
        working-directory: dg_dgcode
        env:
          DGDEP_IGNOREBADSHEBANG: 1
